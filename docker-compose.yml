version: '2.1'

networks:
  monitor-net:
    driver: bridge
  wamc-web:
    external:
      name: wamc_default

volumes:
    prometheus_data: {}
    grafana_data: {}

services:

  prometheus:
    image: prom/prometheus:v2.8.1
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.external-url=https://wamc.lutzky.net/prometheus'
      - '--web.route-prefix=/'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitor-net
      - wamc-web
    expose:
      - 9090
    extra_hosts:
      # TODO: Once host-gateway is available (docker 20.10?) use that.
      # See https://github.com/moby/moby/pull/40007 and
      # https://stackoverflow.com/questions/24319662
      - "host.docker.internal:172.19.0.1"
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: "true"
      traefik.docker.network: "wamc_default"
      traefik.http.middlewares.prometheus-stripprefix.stripprefix.prefixes: /prometheus
      traefik.http.routers.prometheus.rule: PathPrefix(`/prometheus`)
      traefik.http.routers.prometheus.middlewares: prometheus-stripprefix
    links:
      - "nodeexporter:nodeexporter"

  alertmanager:
    image: prom/alertmanager:v0.16.1
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=https://wamc.lutzky.net/alertmanager'
      - '--web.route-prefix=/'
    restart: unless-stopped
    networks:
      - monitor-net
      - wamc-web
    expose:
      - 9093
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: "true"
      traefik.docker.network: "wamc_default"
      traefik.http.middlewares.alertmanager-stripprefix.stripprefix.prefixes: /alertmanager
      traefik.http.routers.alertmanager.rule: PathPrefix(`/alertmanager`)
      traefik.http.routers.alertmanager.middlewares: alertmanager-stripprefix

  alertmanager-bot:
    image: metalmatze/alertmanager-bot:0.4.2
    container_name: alertmanager-bot
    volumes:
      - ./alertmanager-bot:/data
    environment:
      - ALERTMANAGER_URL=http://alertmanager:9093/
      - BOLT_PATH=/data/bot.db
      - STORE=bolt
      - TELEGRAM_ADMIN=${TELEGRAM_ADMIN:?TELEGRAM_ADMIN undefined in .env}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN:?TELEGRAM_TOKEN undefined in .env}
      - TEMPLATE_PATHS=/data/default.tmpl
      - LISTEN_ADDR=0.0.0.0:8080
    restart: unless-stopped
    networks:
      - monitor-net

  nodeexporter:
    image: prom/node-exporter:v0.17.0
    container_name: nodeexporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.netclass'
    restart: unless-stopped
    network_mode: host
    labels:
      org.label-schema.group: "monitoring"

  sonarrexporter:
    image: lutzky/sonarr_exporter
    container_name: sonarrexporter
    volumes:
      - ./sonarrexporter:/config
    command:
      - '/sonarr_exporter'
      - '-configFile=/config/config.json'
    restart: unless-stopped
    networks:
      - monitor-net
      - wamc-web
    labels:
      org.label-schema.group: "monitoring"

  radarrexporter:
    image: lutzky/sonarr_exporter
    container_name: radarrexporter
    volumes:
      - ./radarrexporter:/config
    command:
      - '/sonarr_exporter'
      - '-configFile=/config/config.json'
    restart: unless-stopped
    networks:
      - monitor-net
      - wamc-web
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.33.0
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      #- /cgroup:/cgroup:ro #doesn't work on MacOS only for Linux
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:6.0.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/datasources
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/setup.sh:/setup.sh
    entrypoint: /setup.sh
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
    restart: unless-stopped
    networks:
      - monitor-net
      - wamc-web
    expose:
      - 3000
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: "true"
      traefik.docker.network: "wamc_default"
      traefik.http.middlewares.grafana-stripprefix.stripprefix.prefixes: /grafana
      traefik.http.routers.grafana.rule: PathPrefix(`/grafana`)
      traefik.http.routers.grafana.middlewares: grafana-stripprefix

  pushgateway:
    image: prom/pushgateway:v0.7.0
    container_name: pushgateway
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  blackbox_exporter:
    container_name: blackbox_exporter
    restart: unless-stopped
    image: prom/blackbox-exporter:master
    networks:
      - monitor-net
      - wamc-web
    volumes:
      - ./prober:/config
    command:
      - --config.file=/config/config.yml
    expose:
      - 9115
    labels:
      org.label-schema.group: "monitoring"
      traefik.enable: "true"
      traefik.docker.network: "wamc_default"
      traefik.http.middlewares.prober-stripprefix.stripprefix.prefixes: /prober
      traefik.http.routers.prober.rule: PathPrefix(`/prober`)
      traefik.http.routers.prober.middlewares: prober-stripprefix
